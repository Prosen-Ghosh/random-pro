var text = [
    "Believe me.",
    "As soon as possible.",
    "Absolutely not.",
    "Call me tomorrow.",
    "Come with me.",
    "Congratulations.",
    "Don’t exaggerate.",
    "Don’t tell me that.",
    "Give me a hand.",
    "Go right ahead.",
    "Have a good trip.",
    "Have a nice day.",
    "A car is an example of a complex object, with many attributes.",
    "We don’t need to understand all of its internal mechanics, what kind of engine it has, how the gas makes it run, or even where the gas came from in order to know how to interact with it.",
    "The car’s behaviors have been made simple for us through object-oriented logic: put the key in the ignition, and the car turns on and gets us where we need to go.", 
    "The attributes that make this possible—all of the car’s parts, electronics, and engineering—are a “package” we don’t need to break down in order to understand.",   
    "Apply this to software building, and it allows developers to break down big, complicated projects into compartmentalized objects, program them to have attributes and behaviors, then essentially set them aside and focus on programming how the objects interact—a higher level of thinking that makes writing code less linear and more efficient.",
    "Modern, high-level languages like Python and Ruby are perfect examples of OOP.",
    "The fact that they’re able to be so streamlined gets right to the heart of OOP logic.",
    "JavaScript is a programming language that allows you to implement complex things on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, or interactive maps, or animated 2D/3D graphics, or scrolling video jukeboxes, etc.",
    "— you can bet that JavaScript is probably involved.",
    "It is the third layer of the layer cake of standard web technologies, two of which (HTML and CSS) we have covered in much more detail in other parts of the Learning Area.",
    "In computer science, functional programming is a programming paradigm—a style of building the structure and elements of computer programs—that treats computation as the evaluation of mathematical functions and avoids changing-state and mutable data.",
    "It is a declarative programming paradigm, which means programming is done with expressions[1] or declarations[2] instead of statements.",
    "In functional code, the output value of a function depends only on the arguments that are passed to the function, so calling a function f twice with the same value for an argument x will produce the same result f(x) each time; this is in contrast to procedures depending on a local or global state, which may produce different results at different times when called with the same arguments but a different program state.",
    "Eliminating side effects, i,e.",
    "changes in state that do not depend on the function inputs, can make it much easier to understand and predict the behavior of a program, which is one of the key motivations for the development of functional programming.",
    "Functional programming has its origins in lambda calculus, a formal system developed in the 1930s to investigate computability, the Entscheidungsproblem, function definition, function application, and recursion.",
    "Many functional programming languages can be viewed as elaborations on the lambda calculus.",
    "Another well-known declarative programming paradigm, logic programming, is based on relations.",    
    "In contrast, imperative programming changes state with commands in the source code, the simplest example being assignment.",
    "Imperative programming does have functions—not in the mathematical sense—but in the sense of subroutines.",
    "They can have side effects that may change the value of program state.",
    "Functions without return values therefore make sense.",
    "Because of this, they lack referential transparency, i,e. the same language expression can result in different values at different times depending on the state of the executing program.",    
    "Functional programming languages have largely been emphasized in academia rather than in commercial software development.",
    "However, prominent programming languages which support functional programming such as Common Lisp, Scheme,[4][5][6][7] Clojure,[8][9] Wolfram Language[10] (also known as Mathematica), Racket,[11] Erlang,[12][13][14] OCaml,[15][16] Haskell,[17][18] and F#[19][20] have been used in industrial and commercial applications by a wide variety of organizations.",
    "JavaScript, one of the world's most widely-distributed languages[21][22], has the properties of an untyped functional language[23], as well as imperative and object-oriented paradigms.",
    "Functional programming is also supported in some domain-specific programming languages like R (statistics),[24] J, K and Q from Kx Systems (financial analysis), XQuery/XSLT (XML),[25][26] and Opal.",
    "Widespread domain-specific declarative languages like SQL and Lex/Yacc use some elements of functional programming, especially in eschewing mutable values.",    
    "Programming in a functional style can also be accomplished in languages that are not specifically designed for functional programming.",
    "For example, the imperative Perl programming language has been the subject of a book describing how to apply functional programming concepts.",
    "This is also true of the PHP programming language.",
    "C++11, Java 8, and C# 3 all added constructs to facilitate the functional style.",
    "The Julia language also offers functional programming abilities.",
    "An interesting case is that of Scala[31] – it is frequently written in a functional style, but the presence of side effects and mutable state place it in a grey area between imperative and functional languages."
];

module.exports = text;